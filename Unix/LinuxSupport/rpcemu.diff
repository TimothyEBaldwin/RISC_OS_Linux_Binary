diff -ur a/src/arm_common.c b/src/arm_common.c
--- a/src/arm_common.c	2020-05-06 20:19:23.000000000 +0100
+++ b/src/arm_common.c	2021-01-30 11:24:57.899829916 +0000
@@ -40,6 +40,8 @@
 #define SWI_OS_CallASWI		0x6f
 #define SWI_OS_CallASWIR12	0x71
 
+#define SWI_IXSupport_LinuxSyscall	0x59EC0
+
 #define SWI_Portable_ReadFeatures	0x42fc5
 #define SWI_Portable_Idle		0x42fc6
 
@@ -622,6 +624,10 @@
 		mouse_hack_osmouse();
 		arm.reg[cpsr] &= ~VFLAG;
 
+	} else if (swinum == SWI_IXSupport_LinuxSyscall && (arm.reg[7] == 1 || arm.reg[7] == 248)) {
+		/* IXSupport_LinuxSyscall exit */
+		exit(arm.reg[0]);
+
 	} else if (swinum == ARCEM_SWI_HOSTFS) {
 		ARMul_State state;
 
diff -ur a/src/qt5/rpcemu.pro b/src/qt5/rpcemu.pro
--- a/src/qt5/rpcemu.pro	2020-05-06 20:19:23.000000000 +0100
+++ b/src/qt5/rpcemu.pro	2021-01-30 11:29:08.629426401 +0000
@@ -162,22 +162,13 @@
 		HEADERS +=	../codegen_x86.h
 		SOURCES +=	../codegen_x86.c
 	}
-	
-	win32 {
-		TARGET = RPCEmu-Recompiler
-	} else {
-		TARGET = rpcemu-recompiler
-	}
 } else {
 	SOURCES +=	../arm.c \
 			../codegen_null.c
-	win32 {
-		TARGET = RPCEmu-Interpreter
-	} else {
-		TARGET = rpcemu-interpreter
-	}
 }
 
+TARGET = rpcemu
+
 # Big endian architectures
 # need to find defines for sparc, arm be, mips be
 contains(QMAKE_HOST.arch, ppc)|contains(QMAKE_HOST.arch, ppc64) {
diff -r 00a162d7e6cd src/ArmDynarec.c
--- a/src/ArmDynarec.c	Wed May 06 20:17:33 2020 +0100
+++ b/src/ArmDynarec.c	Sat Jan 30 15:08:40 2021 +0000
@@ -20,8 +20,6 @@
 
 #include "rpcemu.h"
 
-int blockend;
-
 /*Preliminary FPA emulation. This works to an extent - !Draw works with it, !SICK
   seems to (FPA Whetstone scores are around 100x without), but !AMPlayer doesn't
   work, and GCC stuff tends to crash.*/
@@ -681,8 +679,6 @@
 	opSWI,	  opSWI,    opSWI,    opSWI,	opSWI,	  opSWI,    opSWI,    opSWI      //F8
 };
 
-int linecyc=0;
-
 static inline int
 arm_opcode_may_abort(uint32_t opcode)
 {
diff -r 00a162d7e6cd src/codegen_amd64.h
--- a/src/codegen_amd64.h	Wed May 06 20:17:33 2020 +0100
+++ b/src/codegen_amd64.h	Sat Jan 30 15:08:40 2021 +0000
@@ -28,6 +28,8 @@
 extern int codeblocknum[0x8000];
 
 extern uint8_t flaglookup[16][16];
+extern int blockend;
+extern int linecyc;
 
 #define BLOCKSTART 32
 
diff -r 00a162d7e6cd src/codegen_x86.h
--- a/src/codegen_x86.h	Wed May 06 20:17:33 2020 +0100
+++ b/src/codegen_x86.h	Sat Jan 30 15:08:40 2021 +0000
@@ -28,6 +28,8 @@
 extern int codeblocknum[0x8000];
 
 extern uint8_t flaglookup[16][16];
+extern int blockend;
+extern int linecyc;
 
 #define BLOCKSTART 16
 //uint32_t blocks[1024];
